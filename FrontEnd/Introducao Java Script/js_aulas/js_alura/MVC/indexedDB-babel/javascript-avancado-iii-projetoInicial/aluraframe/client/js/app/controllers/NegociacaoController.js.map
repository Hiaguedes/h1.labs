{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_ordemAtual","_init","ConnectionFactory","getConnection","then","NegociacaoDao","conc","dao","listaDados","negs","forEach","adiciona","neg","catch","console","log","erro","texto","setInterval","_importaNegociacoes","event","preventDefault","negociacao","_criaNegociacao","_limpaFormulario","service","NegociacaoService","obterNegociacoes","negociacoes","filter","some","JSON","stringify","negociacaoExistente","apagaDados","msg","esvazia","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","p","s"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\n    \n    constructor() {\n        \n        let $ = document.querySelector.bind(document);\n        \n        this._inputData = $('#data');\n        this._inputQuantidade = $('#quantidade');\n        this._inputValor = $('#valor');\n         \n        this._listaNegociacoes = new Bind(\n            new ListaNegociacoes(), \n            new NegociacoesView($('#negociacoesView')), \n            'adiciona', 'esvazia' , 'ordena', 'inverteOrdem');\n       \n        this._mensagem = new Bind(\n            new Mensagem(), new MensagemView($('#mensagemView')),\n            'texto');    \n            \n        this._ordemAtual = '';\n        this._init();\n\n    }\n\n    _init(){\n        ConnectionFactory.getConnection()\n        .then(conc => new NegociacaoDao(conc))\n        .then(dao =>dao.listaDados())\n        .then(negs => \n                negs.forEach(neg => this._listaNegociacoes.adiciona(neg)\n                ))\n        .catch(erro => {\n            console.log(erro);\n            this._mensagem.texto = erro;\n        })\n\nsetInterval(() => \nthis._importaNegociacoes(),3000)\n    }\n    \n    adiciona(event) {\n        \n        event.preventDefault();\n\n        ConnectionFactory\n            .getConnection()\n            .then(conc => {\n                let negociacao=this._criaNegociacao();\n\n                new NegociacaoDao(conc)\n                .adiciona(negociacao)\n                .then(() => {\n                    this._listaNegociacoes.adiciona(negociacao);\n                    this._mensagem.texto = 'Negociação adicionada com sucesso'; \n                    this._limpaFormulario();\n                })\n            })\n            .catch(erro => this._mensagem.texto = erro);\n        };\n\n    _importaNegociacoes() {\n        \n\n        let service = new NegociacaoService();\n        service\n            .obterNegociacoes()\n            .then(negociacoes => negociacoes.filter( negociacao => \n                !this._listaNegociacoes.negociacoes.some(negociacaoExistente => // some (verifica se dentro do array tenho alguma coisa igual a uma query, se tiver retorna true) como queremos adicionar o que não existe por isso o !\n                    JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente))\n                ))\n            .then(negociacoes => negociacoes.forEach(negociacao => {\n                this._listaNegociacoes.adiciona(negociacao);\n                //this._mensagem.texto = 'Negociações do período importadas'   \n            }))\n            .catch(erro => this._mensagem.texto = erro);                              \n    }\n    \n    apaga() {\n        \n        ConnectionFactory\n            .getConnection()\n            .then(conc => new NegociacaoDao(conc))\n            .then(dao => dao.apagaDados())\n            .then(msg => {\n                this._mensagem.texto=msg;\n                this._listaNegociacoes.esvazia();\n            });\n\n    };\n    \n    _criaNegociacao() {\n        \n        return new Negociacao(\n            DateHelper.textoParaData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value));    \n    }\n    \n    _limpaFormulario() {\n     \n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0;\n        this._inputData.focus();   \n    }\n    \n    ordena(coluna) {\n        \n        if(this._ordemAtual == coluna) {\n            this._listaNegociacoes.inverteOrdem(); \n        } else {\n            this._listaNegociacoes.ordena((p, s) => p[coluna] - s[coluna]);    \n        }\n        this._ordemAtual = coluna;    \n    }\n}"]}