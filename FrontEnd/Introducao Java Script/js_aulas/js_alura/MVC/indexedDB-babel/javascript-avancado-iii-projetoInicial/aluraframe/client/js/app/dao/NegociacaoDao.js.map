{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsucess","onerror","console","error","e","target","cursor","openCursor","negociacoes","onsuccess","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","clear","log"],"mappings":";;;;;;IAAMA,a;AAEF,2BAAYC,UAAZ,EAAuB;AAAA;;AACnB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAW;AAAA;;AAEhB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKJI,wBAAQI,QAAR,GAAmB,aAAK;AACpBN;AACH,iBAFD;;AAIAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,KAAR,CAAcC,EAAEC,MAAF,CAASF,KAAvB;AACAR,2BAAO,8BAAP;AACH,iBAHD;AAIC,aAdM,CAAP;AAeH;;;qCAEW;AAAA;;AACR,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIW,SAAQ,OAAKhB,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACKO,WADL,CACiB,OAAKP,MADtB,EAEKgB,UAFL,EAAZ;AAGA,oBAAIC,cAAc,EAAlB;;AAEAF,uBAAOG,SAAP,GAAmB,aAAK;AACxB,wBAAIC,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,wBAAGD,KAAH,EAAS;AACL,4BAAIE,OAAOF,MAAMG,KAAjB;AACAL,oCAAYM,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA0BJ,KAAKK,WAA/B,EAA2CL,KAAKM,MAAhD,CAAjB;AACAR,8BAAMS,QAAN;AACH,qBAJD,MAIM;AACFzB,gCAAQc,WAAR;AACH;AACA,iBAVD;;AAYAF,uBAAOL,OAAP,GAAiB,aAAK;AAClBN,2BAAO,wCAAP;AACH,iBAFD;AAGH,aArBM,CAAP;AAsBH;;;qCAEW;AAAA;;AACR,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAS,OAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACIO,WADJ,CACgB,OAAKP,MADrB,EAEI6B,KAFJ,EAAb;;AAIAxB,wBAAQa,SAAR,GAAoB,aAAK;AACrBf,4BAAQ,kCAAR;AACH,iBAFD;;AAIAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQmB,GAAR,CAAYjB,EAAEC,MAAF,CAASF,KAArB;AACAR,2BAAO,yCAAP;AACH,iBAHD;AAIH,aAbM,CAAP;AAcH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\r\n\r\n    constructor(connection){\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao){\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(negociacao);\r\n\r\n        request.onsucess = e => {\r\n            resolve();\r\n        };\r\n\r\n        request.onerror = e => {\r\n            console.error(e.target.error);\r\n            reject('Não adicionamos a negociação')\r\n        };\r\n        });\r\n    }\r\n\r\n    listaDados(){\r\n        return new Promise((resolve, reject) => {\r\n            let cursor =this._connection.transaction([this._store], 'readwrite')\r\n                            .objectStore(this._store)\r\n                            .openCursor();\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = e => {\r\n            let atual = e.target.result;\r\n\r\n            if(atual){\r\n                let dado = atual.value;\r\n                negociacoes.push(new Negociacao(dado._data,dado._quantidade,dado._valor));\r\n                atual.continue();\r\n            }else {\r\n                resolve(negociacoes);\r\n            }\r\n            };\r\n\r\n            cursor.onerror = e => {\r\n                reject('Não foi possível listar as negociações');\r\n            };\r\n        });\r\n    }\r\n\r\n    apagaDados(){\r\n        return new Promise((resolve, reject) => {\r\n            let request =this._connection.transaction([this._store], 'readwrite')\r\n                            .objectStore(this._store)\r\n                            .clear();\r\n            \r\n            request.onsuccess = e => {\r\n                resolve('Negociação removidas com sucesso');\r\n            };\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível remover as negociações');\r\n            }\r\n        });\r\n    };\r\n}"]}