;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 7/30/2019 3:58:00 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2A01      	GOTO       513
_SPI1_Write:
;__Lib_SPI_c345.c,77 :: 		
;__Lib_SPI_c345.c,80 :: 		
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x0820      	MOVF       FARG_SPI1_Write_data_, 0
0x0006	0x0093      	MOVWF      SSPBUF
;__Lib_SPI_c345.c,81 :: 		
L_SPI1_Write8:
0x0007	0x1683      	BSF        STATUS, 5
0x0008	0x1814      	BTFSC      SSPSTAT, 0
0x0009	0x280C      	GOTO       L_SPI1_Write9
;__Lib_SPI_c345.c,82 :: 		
0x000A	0x0000      	NOP
0x000B	0x2807      	GOTO       L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_c345.c,83 :: 		
0x000C	0x1283      	BCF        STATUS, 5
0x000D	0x0813      	MOVF       SSPBUF, 0
0x000E	0x00F0      	MOVWF      R0
;__Lib_SPI_c345.c,84 :: 		
L_end_SPI1_Write:
0x000F	0x0008      	RETURN
; end of _SPI1_Write
_Write_Byte:
;MatrizdeLed.c,203 :: 		void Write_Byte(unsigned short myColumn, unsigned short myValue,unsigned int maxrow,unsigned int maxcolumn)
;MatrizdeLed.c,206 :: 		if(maxrow == 0 && maxcolumn == 0) lc=0;
0x0010	0x3000      	MOVLW      0
0x0011	0x1283      	BCF        STATUS, 5
0x0012	0x1303      	BCF        STATUS, 6
0x0013	0x064C      	XORWF      FARG_Write_Byte_maxrow+1, 0
0x0014	0x1D03      	BTFSS      STATUS, 2
0x0015	0x2818      	GOTO       L__Write_Byte246
0x0016	0x3000      	MOVLW      0
0x0017	0x064B      	XORWF      FARG_Write_Byte_maxrow, 0
L__Write_Byte246:
0x0018	0x1D03      	BTFSS      STATUS, 2
0x0019	0x2824      	GOTO       L_Write_Byte18
0x001A	0x3000      	MOVLW      0
0x001B	0x064E      	XORWF      FARG_Write_Byte_maxcolumn+1, 0
0x001C	0x1D03      	BTFSS      STATUS, 2
0x001D	0x2820      	GOTO       L__Write_Byte247
0x001E	0x3000      	MOVLW      0
0x001F	0x064D      	XORWF      FARG_Write_Byte_maxcolumn, 0
L__Write_Byte247:
0x0020	0x1D03      	BTFSS      STATUS, 2
0x0021	0x2824      	GOTO       L_Write_Byte18
L__Write_Byte213:
0x0022	0x01CF      	CLRF       Write_Byte_lc_L0
0x0023	0x01D0      	CLRF       Write_Byte_lc_L0+1
L_Write_Byte18:
;MatrizdeLed.c,207 :: 		if(maxrow == 0 && maxcolumn == 1) lc=1;
0x0024	0x3000      	MOVLW      0
0x0025	0x064C      	XORWF      FARG_Write_Byte_maxrow+1, 0
0x0026	0x1D03      	BTFSS      STATUS, 2
0x0027	0x282A      	GOTO       L__Write_Byte248
0x0028	0x3000      	MOVLW      0
0x0029	0x064B      	XORWF      FARG_Write_Byte_maxrow, 0
L__Write_Byte248:
0x002A	0x1D03      	BTFSS      STATUS, 2
0x002B	0x2838      	GOTO       L_Write_Byte21
0x002C	0x3000      	MOVLW      0
0x002D	0x064E      	XORWF      FARG_Write_Byte_maxcolumn+1, 0
0x002E	0x1D03      	BTFSS      STATUS, 2
0x002F	0x2832      	GOTO       L__Write_Byte249
0x0030	0x3001      	MOVLW      1
0x0031	0x064D      	XORWF      FARG_Write_Byte_maxcolumn, 0
L__Write_Byte249:
0x0032	0x1D03      	BTFSS      STATUS, 2
0x0033	0x2838      	GOTO       L_Write_Byte21
L__Write_Byte212:
0x0034	0x3001      	MOVLW      1
0x0035	0x00CF      	MOVWF      Write_Byte_lc_L0
0x0036	0x3000      	MOVLW      0
0x0037	0x00D0      	MOVWF      Write_Byte_lc_L0+1
L_Write_Byte21:
;MatrizdeLed.c,208 :: 		if(maxrow == 1 && maxcolumn == 0) lc=10;
0x0038	0x3000      	MOVLW      0
0x0039	0x064C      	XORWF      FARG_Write_Byte_maxrow+1, 0
0x003A	0x1D03      	BTFSS      STATUS, 2
0x003B	0x283E      	GOTO       L__Write_Byte250
0x003C	0x3001      	MOVLW      1
0x003D	0x064B      	XORWF      FARG_Write_Byte_maxrow, 0
L__Write_Byte250:
0x003E	0x1D03      	BTFSS      STATUS, 2
0x003F	0x284C      	GOTO       L_Write_Byte24
0x0040	0x3000      	MOVLW      0
0x0041	0x064E      	XORWF      FARG_Write_Byte_maxcolumn+1, 0
0x0042	0x1D03      	BTFSS      STATUS, 2
0x0043	0x2846      	GOTO       L__Write_Byte251
0x0044	0x3000      	MOVLW      0
0x0045	0x064D      	XORWF      FARG_Write_Byte_maxcolumn, 0
L__Write_Byte251:
0x0046	0x1D03      	BTFSS      STATUS, 2
0x0047	0x284C      	GOTO       L_Write_Byte24
L__Write_Byte211:
0x0048	0x300A      	MOVLW      10
0x0049	0x00CF      	MOVWF      Write_Byte_lc_L0
0x004A	0x3000      	MOVLW      0
0x004B	0x00D0      	MOVWF      Write_Byte_lc_L0+1
L_Write_Byte24:
;MatrizdeLed.c,209 :: 		if(maxrow == 1 && maxcolumn == 1) lc=11;
0x004C	0x3000      	MOVLW      0
0x004D	0x064C      	XORWF      FARG_Write_Byte_maxrow+1, 0
0x004E	0x1D03      	BTFSS      STATUS, 2
0x004F	0x2852      	GOTO       L__Write_Byte252
0x0050	0x3001      	MOVLW      1
0x0051	0x064B      	XORWF      FARG_Write_Byte_maxrow, 0
L__Write_Byte252:
0x0052	0x1D03      	BTFSS      STATUS, 2
0x0053	0x2860      	GOTO       L_Write_Byte27
0x0054	0x3000      	MOVLW      0
0x0055	0x064E      	XORWF      FARG_Write_Byte_maxcolumn+1, 0
0x0056	0x1D03      	BTFSS      STATUS, 2
0x0057	0x285A      	GOTO       L__Write_Byte253
0x0058	0x3001      	MOVLW      1
0x0059	0x064D      	XORWF      FARG_Write_Byte_maxcolumn, 0
L__Write_Byte253:
0x005A	0x1D03      	BTFSS      STATUS, 2
0x005B	0x2860      	GOTO       L_Write_Byte27
L__Write_Byte210:
0x005C	0x300B      	MOVLW      11
0x005D	0x00CF      	MOVWF      Write_Byte_lc_L0
0x005E	0x3000      	MOVLW      0
0x005F	0x00D0      	MOVWF      Write_Byte_lc_L0+1
L_Write_Byte27:
;MatrizdeLed.c,211 :: 		switch(lc){
0x0060	0x2877      	GOTO       L_Write_Byte28
;MatrizdeLed.c,212 :: 		case 0:
L_Write_Byte30:
;MatrizdeLed.c,214 :: 		Chip_Select = 0;       // select max7219.
0x0061	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,215 :: 		SPI1_write(myColumn);  // send myColumn value to max7219 (digit place).
0x0062	0x0849      	MOVF       FARG_Write_Byte_myColumn, 0
0x0063	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x0064	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,216 :: 		SPI1_write(myValue);   // send myValue value to max7219 (digit place).
0x0065	0x084A      	MOVF       FARG_Write_Byte_myValue, 0
0x0066	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x0067	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,217 :: 		Chip_Select = 1;       // deselect max7219.
0x0068	0x1407      	BSF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,218 :: 		break;
0x0069	0x2887      	GOTO       L_Write_Byte29
;MatrizdeLed.c,220 :: 		case 1:
L_Write_Byte31:
;MatrizdeLed.c,222 :: 		Chip_Select = 0;
0x006A	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,224 :: 		SPI1_write(myColumn);
0x006B	0x0849      	MOVF       FARG_Write_Byte_myColumn, 0
0x006C	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x006D	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,225 :: 		SPI1_write(myValue);
0x006E	0x084A      	MOVF       FARG_Write_Byte_myValue, 0
0x006F	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x0070	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,226 :: 		SPI1_write(0x00);    // Bypass the 1st Chip
0x0071	0x01A0      	CLRF       FARG_SPI1_Write_data_
0x0072	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,227 :: 		SPI1_write(0x00);
0x0073	0x01A0      	CLRF       FARG_SPI1_Write_data_
0x0074	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,229 :: 		Chip_Select = 1;
0x0075	0x1407      	BSF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,230 :: 		break;
0x0076	0x2887      	GOTO       L_Write_Byte29
;MatrizdeLed.c,231 :: 		}
L_Write_Byte28:
0x0077	0x3000      	MOVLW      0
0x0078	0x0650      	XORWF      Write_Byte_lc_L0+1, 0
0x0079	0x1D03      	BTFSS      STATUS, 2
0x007A	0x287D      	GOTO       L__Write_Byte254
0x007B	0x3000      	MOVLW      0
0x007C	0x064F      	XORWF      Write_Byte_lc_L0, 0
L__Write_Byte254:
0x007D	0x1903      	BTFSC      STATUS, 2
0x007E	0x2861      	GOTO       L_Write_Byte30
0x007F	0x3000      	MOVLW      0
0x0080	0x0650      	XORWF      Write_Byte_lc_L0+1, 0
0x0081	0x1D03      	BTFSS      STATUS, 2
0x0082	0x2885      	GOTO       L__Write_Byte255
0x0083	0x3001      	MOVLW      1
0x0084	0x064F      	XORWF      Write_Byte_lc_L0, 0
L__Write_Byte255:
0x0085	0x1903      	BTFSC      STATUS, 2
0x0086	0x286A      	GOTO       L_Write_Byte31
L_Write_Byte29:
;MatrizdeLed.c,232 :: 		}
L_end_Write_Byte:
0x0087	0x0008      	RETURN
; end of _Write_Byte
_Clear_Matrix:
;MatrizdeLed.c,235 :: 		void Clear_Matrix(void)
;MatrizdeLed.c,239 :: 		for(x=1;x<9;x++)
0x0088	0x3001      	MOVLW      1
0x0089	0x1283      	BCF        STATUS, 5
0x008A	0x1303      	BCF        STATUS, 6
0x008B	0x00C8      	MOVWF      Clear_Matrix_x_L0
L_Clear_Matrix32:
0x008C	0x3009      	MOVLW      9
0x008D	0x0248      	SUBWF      Clear_Matrix_x_L0, 0
0x008E	0x1803      	BTFSC      STATUS, 0
0x008F	0x28A4      	GOTO       L_Clear_Matrix33
;MatrizdeLed.c,241 :: 		Write_Byte(x,0x00,0,0);
0x0090	0x0848      	MOVF       Clear_Matrix_x_L0, 0
0x0091	0x00C9      	MOVWF      FARG_Write_Byte_myColumn
0x0092	0x01CA      	CLRF       FARG_Write_Byte_myValue
0x0093	0x01CB      	CLRF       FARG_Write_Byte_maxrow
0x0094	0x01CC      	CLRF       FARG_Write_Byte_maxrow+1
0x0095	0x01CD      	CLRF       FARG_Write_Byte_maxcolumn
0x0096	0x01CE      	CLRF       FARG_Write_Byte_maxcolumn+1
0x0097	0x2010      	CALL       _Write_Byte
;MatrizdeLed.c,242 :: 		Write_Byte(x,0x00,0,1);
0x0098	0x0848      	MOVF       Clear_Matrix_x_L0, 0
0x0099	0x00C9      	MOVWF      FARG_Write_Byte_myColumn
0x009A	0x01CA      	CLRF       FARG_Write_Byte_myValue
0x009B	0x01CB      	CLRF       FARG_Write_Byte_maxrow
0x009C	0x01CC      	CLRF       FARG_Write_Byte_maxrow+1
0x009D	0x3001      	MOVLW      1
0x009E	0x00CD      	MOVWF      FARG_Write_Byte_maxcolumn
0x009F	0x3000      	MOVLW      0
0x00A0	0x00CE      	MOVWF      FARG_Write_Byte_maxcolumn+1
0x00A1	0x2010      	CALL       _Write_Byte
;MatrizdeLed.c,239 :: 		for(x=1;x<9;x++)
0x00A2	0x0AC8      	INCF       Clear_Matrix_x_L0, 1
;MatrizdeLed.c,243 :: 		}
0x00A3	0x288C      	GOTO       L_Clear_Matrix32
L_Clear_Matrix33:
;MatrizdeLed.c,244 :: 		}
L_end_Clear_Matrix:
0x00A4	0x0008      	RETURN
; end of _Clear_Matrix
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x00A5	0x1283      	BCF        STATUS, 5
0x00A6	0x1303      	BCF        STATUS, 6
0x00A7	0x0828      	MOVF       ___DoICPAddr+1, 0
0x00A8	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00A9	0x0827      	MOVF       ___DoICPAddr, 0
0x00AA	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00AB	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x00AC	0x20A5      	CALL       _____DoICP
0x00AD	0x118A      	BCF        PCLATH, 3
0x00AE	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x00AF	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x00B0	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x00B1	0x0AA7      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x00B2	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x00B3	0x0AA8      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x00B4	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x00B5	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x00B6	0x28AC      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x00B7	0x0008      	RETURN
; end of ___CC2DW
_max7219_init:
;MatrizdeLed.c,121 :: 		void max7219_init(int maxrow, int maxcolumn)
;MatrizdeLed.c,124 :: 		if(maxrow == 0 && maxcolumn == 0) lc=0;
0x00B8	0x3000      	MOVLW      0
0x00B9	0x1283      	BCF        STATUS, 5
0x00BA	0x1303      	BCF        STATUS, 6
0x00BB	0x062A      	XORWF      FARG_max7219_init_maxrow+1, 0
0x00BC	0x1D03      	BTFSS      STATUS, 2
0x00BD	0x28C0      	GOTO       L__max7219_init235
0x00BE	0x3000      	MOVLW      0
0x00BF	0x0629      	XORWF      FARG_max7219_init_maxrow, 0
L__max7219_init235:
0x00C0	0x1D03      	BTFSS      STATUS, 2
0x00C1	0x28CC      	GOTO       L_max7219_init2
0x00C2	0x3000      	MOVLW      0
0x00C3	0x062C      	XORWF      FARG_max7219_init_maxcolumn+1, 0
0x00C4	0x1D03      	BTFSS      STATUS, 2
0x00C5	0x28C8      	GOTO       L__max7219_init236
0x00C6	0x3000      	MOVLW      0
0x00C7	0x062B      	XORWF      FARG_max7219_init_maxcolumn, 0
L__max7219_init236:
0x00C8	0x1D03      	BTFSS      STATUS, 2
0x00C9	0x28CC      	GOTO       L_max7219_init2
L__max7219_init209:
0x00CA	0x01AD      	CLRF       max7219_init_lc_L0
0x00CB	0x01AE      	CLRF       max7219_init_lc_L0+1
L_max7219_init2:
;MatrizdeLed.c,125 :: 		if(maxrow == 0 && maxcolumn == 1) lc=1;
0x00CC	0x3000      	MOVLW      0
0x00CD	0x062A      	XORWF      FARG_max7219_init_maxrow+1, 0
0x00CE	0x1D03      	BTFSS      STATUS, 2
0x00CF	0x28D2      	GOTO       L__max7219_init237
0x00D0	0x3000      	MOVLW      0
0x00D1	0x0629      	XORWF      FARG_max7219_init_maxrow, 0
L__max7219_init237:
0x00D2	0x1D03      	BTFSS      STATUS, 2
0x00D3	0x28E0      	GOTO       L_max7219_init5
0x00D4	0x3000      	MOVLW      0
0x00D5	0x062C      	XORWF      FARG_max7219_init_maxcolumn+1, 0
0x00D6	0x1D03      	BTFSS      STATUS, 2
0x00D7	0x28DA      	GOTO       L__max7219_init238
0x00D8	0x3001      	MOVLW      1
0x00D9	0x062B      	XORWF      FARG_max7219_init_maxcolumn, 0
L__max7219_init238:
0x00DA	0x1D03      	BTFSS      STATUS, 2
0x00DB	0x28E0      	GOTO       L_max7219_init5
L__max7219_init208:
0x00DC	0x3001      	MOVLW      1
0x00DD	0x00AD      	MOVWF      max7219_init_lc_L0
0x00DE	0x3000      	MOVLW      0
0x00DF	0x00AE      	MOVWF      max7219_init_lc_L0+1
L_max7219_init5:
;MatrizdeLed.c,126 :: 		if(maxrow == 1 && maxcolumn == 0) lc=10;
0x00E0	0x3000      	MOVLW      0
0x00E1	0x062A      	XORWF      FARG_max7219_init_maxrow+1, 0
0x00E2	0x1D03      	BTFSS      STATUS, 2
0x00E3	0x28E6      	GOTO       L__max7219_init239
0x00E4	0x3001      	MOVLW      1
0x00E5	0x0629      	XORWF      FARG_max7219_init_maxrow, 0
L__max7219_init239:
0x00E6	0x1D03      	BTFSS      STATUS, 2
0x00E7	0x28F4      	GOTO       L_max7219_init8
0x00E8	0x3000      	MOVLW      0
0x00E9	0x062C      	XORWF      FARG_max7219_init_maxcolumn+1, 0
0x00EA	0x1D03      	BTFSS      STATUS, 2
0x00EB	0x28EE      	GOTO       L__max7219_init240
0x00EC	0x3000      	MOVLW      0
0x00ED	0x062B      	XORWF      FARG_max7219_init_maxcolumn, 0
L__max7219_init240:
0x00EE	0x1D03      	BTFSS      STATUS, 2
0x00EF	0x28F4      	GOTO       L_max7219_init8
L__max7219_init207:
0x00F0	0x300A      	MOVLW      10
0x00F1	0x00AD      	MOVWF      max7219_init_lc_L0
0x00F2	0x3000      	MOVLW      0
0x00F3	0x00AE      	MOVWF      max7219_init_lc_L0+1
L_max7219_init8:
;MatrizdeLed.c,127 :: 		if(maxrow == 1 && maxcolumn == 1) lc=11;
0x00F4	0x3000      	MOVLW      0
0x00F5	0x062A      	XORWF      FARG_max7219_init_maxrow+1, 0
0x00F6	0x1D03      	BTFSS      STATUS, 2
0x00F7	0x28FA      	GOTO       L__max7219_init241
0x00F8	0x3001      	MOVLW      1
0x00F9	0x0629      	XORWF      FARG_max7219_init_maxrow, 0
L__max7219_init241:
0x00FA	0x1D03      	BTFSS      STATUS, 2
0x00FB	0x2908      	GOTO       L_max7219_init11
0x00FC	0x3000      	MOVLW      0
0x00FD	0x062C      	XORWF      FARG_max7219_init_maxcolumn+1, 0
0x00FE	0x1D03      	BTFSS      STATUS, 2
0x00FF	0x2902      	GOTO       L__max7219_init242
0x0100	0x3001      	MOVLW      1
0x0101	0x062B      	XORWF      FARG_max7219_init_maxcolumn, 0
L__max7219_init242:
0x0102	0x1D03      	BTFSS      STATUS, 2
0x0103	0x2908      	GOTO       L_max7219_init11
L__max7219_init206:
0x0104	0x300B      	MOVLW      11
0x0105	0x00AD      	MOVWF      max7219_init_lc_L0
0x0106	0x3000      	MOVLW      0
0x0107	0x00AE      	MOVWF      max7219_init_lc_L0+1
L_max7219_init11:
;MatrizdeLed.c,129 :: 		switch(lc){
0x0108	0x296B      	GOTO       L_max7219_init12
;MatrizdeLed.c,130 :: 		case 0:
L_max7219_init14:
;MatrizdeLed.c,132 :: 		Chip_Select = 0;       // SELECT MAX
0x0109	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,133 :: 		SPI1_write(0x09);      // BCD mode for digit decoding
0x010A	0x3009      	MOVLW      9
0x010B	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x010C	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,134 :: 		SPI1_write(0x00);
0x010D	0x01A0      	CLRF       FARG_SPI1_Write_data_
0x010E	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,135 :: 		Chip_Select = 1;       // DESELECT MAX
0x010F	0x1407      	BSF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,137 :: 		Chip_Select = 0;       // SELECT MAX
0x0110	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,138 :: 		SPI1_write(0x0A);
0x0111	0x300A      	MOVLW      10
0x0112	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x0113	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,139 :: 		SPI1_write(0x0F);      // Segment luminosity intensity
0x0114	0x300F      	MOVLW      15
0x0115	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x0116	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,140 :: 		Chip_Select = 1;       // DESELECT MAX
0x0117	0x1407      	BSF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,142 :: 		Chip_Select = 0;       // SELECT MAX
0x0118	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,143 :: 		SPI1_write(0x0B);
0x0119	0x300B      	MOVLW      11
0x011A	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x011B	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,144 :: 		SPI1_write(0x07);      // Display refresh
0x011C	0x3007      	MOVLW      7
0x011D	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x011E	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,145 :: 		Chip_Select = 1;       // DESELECT MAX
0x011F	0x1407      	BSF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,147 :: 		Chip_Select = 0;       // SELECT MAX
0x0120	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,148 :: 		SPI1_write(0x0C);
0x0121	0x300C      	MOVLW      12
0x0122	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x0123	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,149 :: 		SPI1_write(0x01);      // Turn on the display
0x0124	0x3001      	MOVLW      1
0x0125	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x0126	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,150 :: 		Chip_Select = 1;       // DESELECT MAX
0x0127	0x1407      	BSF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,152 :: 		Chip_Select = 0;       // SELECT MAX
0x0128	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,153 :: 		SPI1_write(0x00);
0x0129	0x01A0      	CLRF       FARG_SPI1_Write_data_
0x012A	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,154 :: 		SPI1_write(0xFF);      // No test
0x012B	0x30FF      	MOVLW      255
0x012C	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x012D	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,155 :: 		Chip_Select = 1;       // DESELECT MAX
0x012E	0x1407      	BSF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,156 :: 		break;
0x012F	0x297B      	GOTO       L_max7219_init13
;MatrizdeLed.c,159 :: 		case 1:
L_max7219_init15:
;MatrizdeLed.c,161 :: 		Chip_Select = 0;       // SELECT MAX
0x0130	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,162 :: 		SPI1_write(0x09);      // BCD mode for digit decoding
0x0131	0x3009      	MOVLW      9
0x0132	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x0133	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,163 :: 		SPI1_write(0x00);      // using Code-B
0x0134	0x01A0      	CLRF       FARG_SPI1_Write_data_
0x0135	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,164 :: 		SPI1_write(0x00);    // Bypass the 1st Chip
0x0136	0x01A0      	CLRF       FARG_SPI1_Write_data_
0x0137	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,165 :: 		SPI1_write(0x00);
0x0138	0x01A0      	CLRF       FARG_SPI1_Write_data_
0x0139	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,166 :: 		Chip_Select= 1;       // DESELECT MAX
0x013A	0x1407      	BSF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,168 :: 		Chip_Select= 0;       // SELECT MAX
0x013B	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,169 :: 		SPI1_write(0x0A);
0x013C	0x300A      	MOVLW      10
0x013D	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x013E	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,170 :: 		SPI1_write(0x0F);      // Segment luminosity intensity
0x013F	0x300F      	MOVLW      15
0x0140	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x0141	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,171 :: 		SPI1_write(0x00);    // Bypass the 1st Chip
0x0142	0x01A0      	CLRF       FARG_SPI1_Write_data_
0x0143	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,172 :: 		SPI1_write(0x00);
0x0144	0x01A0      	CLRF       FARG_SPI1_Write_data_
0x0145	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,173 :: 		Chip_Select = 1;       // DESELECT MAX
0x0146	0x1407      	BSF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,175 :: 		Chip_Select = 0;       // SELECT MAX
0x0147	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,176 :: 		SPI1_write(0x0B);
0x0148	0x300B      	MOVLW      11
0x0149	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x014A	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,177 :: 		SPI1_write(0x07);      // Display refresh
0x014B	0x3007      	MOVLW      7
0x014C	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x014D	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,178 :: 		SPI1_write(0x00);    // Bypass the 1st Chip
0x014E	0x01A0      	CLRF       FARG_SPI1_Write_data_
0x014F	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,179 :: 		SPI1_write(0x00);
0x0150	0x01A0      	CLRF       FARG_SPI1_Write_data_
0x0151	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,180 :: 		Chip_Select = 1;       // DESELECT MAX
0x0152	0x1407      	BSF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,182 :: 		Chip_Select= 0;       // SELECT MAX
0x0153	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,183 :: 		SPI1_write(0x0C);
0x0154	0x300C      	MOVLW      12
0x0155	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x0156	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,184 :: 		SPI1_write(0x01);      // Turn on the display
0x0157	0x3001      	MOVLW      1
0x0158	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x0159	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,185 :: 		SPI1_write(0x00);    // Bypass the 1st Chip
0x015A	0x01A0      	CLRF       FARG_SPI1_Write_data_
0x015B	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,186 :: 		SPI1_write(0x00);
0x015C	0x01A0      	CLRF       FARG_SPI1_Write_data_
0x015D	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,187 :: 		Chip_Select = 1;       // DESELECT MAX
0x015E	0x1407      	BSF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,189 :: 		Chip_Select = 0;       // SELECT MAX
0x015F	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,190 :: 		SPI1_write(0x00);
0x0160	0x01A0      	CLRF       FARG_SPI1_Write_data_
0x0161	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,191 :: 		SPI1_write(0xFF);      // No test
0x0162	0x30FF      	MOVLW      255
0x0163	0x00A0      	MOVWF      FARG_SPI1_Write_data_
0x0164	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,192 :: 		SPI1_write(0x00);    // Bypass the 1st Chip
0x0165	0x01A0      	CLRF       FARG_SPI1_Write_data_
0x0166	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,193 :: 		SPI1_write(0x00);
0x0167	0x01A0      	CLRF       FARG_SPI1_Write_data_
0x0168	0x2003      	CALL       _SPI1_Write
;MatrizdeLed.c,194 :: 		Chip_Select = 1;
0x0169	0x1407      	BSF        RC0_bit, BitPos(RC0_bit+0)
;MatrizdeLed.c,195 :: 		break;
0x016A	0x297B      	GOTO       L_max7219_init13
;MatrizdeLed.c,196 :: 		}
L_max7219_init12:
0x016B	0x3000      	MOVLW      0
0x016C	0x062E      	XORWF      max7219_init_lc_L0+1, 0
0x016D	0x1D03      	BTFSS      STATUS, 2
0x016E	0x2971      	GOTO       L__max7219_init243
0x016F	0x3000      	MOVLW      0
0x0170	0x062D      	XORWF      max7219_init_lc_L0, 0
L__max7219_init243:
0x0171	0x1903      	BTFSC      STATUS, 2
0x0172	0x2909      	GOTO       L_max7219_init14
0x0173	0x3000      	MOVLW      0
0x0174	0x062E      	XORWF      max7219_init_lc_L0+1, 0
0x0175	0x1D03      	BTFSS      STATUS, 2
0x0176	0x2979      	GOTO       L__max7219_init244
0x0177	0x3001      	MOVLW      1
0x0178	0x062D      	XORWF      max7219_init_lc_L0, 0
L__max7219_init244:
0x0179	0x1903      	BTFSC      STATUS, 2
0x017A	0x2930      	GOTO       L_max7219_init15
L_max7219_init13:
;MatrizdeLed.c,198 :: 		}
L_end_max7219_init:
0x017B	0x0008      	RETURN
; end of _max7219_init
_Char_scroll_left:
;MatrizdeLed.c,465 :: 		void Char_scroll_left(char myChar,int row,int begin_column,int end_column,int begin_max,int end_max){
;MatrizdeLed.c,467 :: 		unsigned short i,j,StartByte,n,m=0,c;
;MatrizdeLed.c,471 :: 		for(i=0;i<6;i++){
0x017C	0x1283      	BCF        STATUS, 5
0x017D	0x1303      	BCF        STATUS, 6
0x017E	0x01C4      	CLRF       Char_scroll_left_i_L0
L_Char_scroll_left182:
0x017F	0x3006      	MOVLW      6
0x0180	0x0244      	SUBWF      Char_scroll_left_i_L0, 0
0x0181	0x1803      	BTFSC      STATUS, 0
0x0182	0x2985      	GOTO       L_Char_scroll_left183
0x0183	0x0AC4      	INCF       Char_scroll_left_i_L0, 1
;MatrizdeLed.c,473 :: 		}
0x0184	0x297F      	GOTO       L_Char_scroll_left182
L_Char_scroll_left183:
;MatrizdeLed.c,474 :: 		for(i=0;i<8;i++){
0x0185	0x01C4      	CLRF       Char_scroll_left_i_L0
L_Char_scroll_left185:
0x0186	0x3008      	MOVLW      8
0x0187	0x0244      	SUBWF      Char_scroll_left_i_L0, 0
0x0188	0x1803      	BTFSC      STATUS, 0
0x0189	0x298C      	GOTO       L_Char_scroll_left186
0x018A	0x0AC4      	INCF       Char_scroll_left_i_L0, 1
;MatrizdeLed.c,476 :: 		}
0x018B	0x2986      	GOTO       L_Char_scroll_left185
L_Char_scroll_left186:
;MatrizdeLed.c,479 :: 		if(end_max!=begin_max) {c=0; }
0x018C	0x0833      	MOVF       FARG_Char_scroll_left_end_max+1, 0
0x018D	0x0631      	XORWF      FARG_Char_scroll_left_begin_max+1, 0
0x018E	0x1D03      	BTFSS      STATUS, 2
0x018F	0x2992      	GOTO       L__Char_scroll_left313
0x0190	0x0830      	MOVF       FARG_Char_scroll_left_begin_max, 0
0x0191	0x0632      	XORWF      FARG_Char_scroll_left_end_max, 0
L__Char_scroll_left313:
0x0192	0x1903      	BTFSC      STATUS, 2
0x0193	0x2995      	GOTO       L_Char_scroll_left188
0x0194	0x01C7      	CLRF       Char_scroll_left_c_L0
L_Char_scroll_left188:
;MatrizdeLed.c,480 :: 		if(end_max==begin_max) {c=1; }
0x0195	0x0833      	MOVF       FARG_Char_scroll_left_end_max+1, 0
0x0196	0x0631      	XORWF      FARG_Char_scroll_left_begin_max+1, 0
0x0197	0x1D03      	BTFSS      STATUS, 2
0x0198	0x299B      	GOTO       L__Char_scroll_left314
0x0199	0x0830      	MOVF       FARG_Char_scroll_left_begin_max, 0
0x019A	0x0632      	XORWF      FARG_Char_scroll_left_end_max, 0
L__Char_scroll_left314:
0x019B	0x1D03      	BTFSS      STATUS, 2
0x019C	0x299F      	GOTO       L_Char_scroll_left189
0x019D	0x3001      	MOVLW      1
0x019E	0x00C7      	MOVWF      Char_scroll_left_c_L0
L_Char_scroll_left189:
;MatrizdeLed.c,481 :: 		switch(c){
0x019F	0x29DC      	GOTO       L_Char_scroll_left190
;MatrizdeLed.c,483 :: 		case 1:
L_Char_scroll_left192:
;MatrizdeLed.c,484 :: 		m= 7*(end_max-begin_max);n= (begin_column-end_column);
0x01A0	0x082E      	MOVF       FARG_Char_scroll_left_end_column, 0
0x01A1	0x022C      	SUBWF      FARG_Char_scroll_left_begin_column, 0
0x01A2	0x00C6      	MOVWF      Char_scroll_left_n_L0
;MatrizdeLed.c,485 :: 		for(j=0;j<0;j++){
0x01A3	0x01C5      	CLRF       Char_scroll_left_j_L0
L_Char_scroll_left193:
0x01A4	0x3000      	MOVLW      0
0x01A5	0x0245      	SUBWF      Char_scroll_left_j_L0, 0
0x01A6	0x1803      	BTFSC      STATUS, 0
0x01A7	0x29D7      	GOTO       L_Char_scroll_left194
;MatrizdeLed.c,486 :: 		for(i=0;i<n;i++){
0x01A8	0x01C4      	CLRF       Char_scroll_left_i_L0
L_Char_scroll_left196:
0x01A9	0x0846      	MOVF       Char_scroll_left_n_L0, 0
0x01AA	0x0244      	SUBWF      Char_scroll_left_i_L0, 0
0x01AB	0x1803      	BTFSC      STATUS, 0
0x01AC	0x29C0      	GOTO       L_Char_scroll_left197
;MatrizdeLed.c,487 :: 		Write_Byte(begin_column-i,Display_Byte[j],row,begin_max);
0x01AD	0x0844      	MOVF       Char_scroll_left_i_L0, 0
0x01AE	0x022C      	SUBWF      FARG_Char_scroll_left_begin_column, 0
0x01AF	0x00C9      	MOVWF      FARG_Write_Byte_myColumn
0x01B0	0x0845      	MOVF       Char_scroll_left_j_L0, 0
0x01B1	0x3E34      	ADDLW      Char_scroll_left_Display_Byte_L0
0x01B2	0x0084      	MOVWF      FSR
0x01B3	0x0800      	MOVF       INDF, 0
0x01B4	0x00CA      	MOVWF      FARG_Write_Byte_myValue
0x01B5	0x082A      	MOVF       FARG_Char_scroll_left_row, 0
0x01B6	0x00CB      	MOVWF      FARG_Write_Byte_maxrow
0x01B7	0x082B      	MOVF       FARG_Char_scroll_left_row+1, 0
0x01B8	0x00CC      	MOVWF      FARG_Write_Byte_maxrow+1
0x01B9	0x0830      	MOVF       FARG_Char_scroll_left_begin_max, 0
0x01BA	0x00CD      	MOVWF      FARG_Write_Byte_maxcolumn
0x01BB	0x0831      	MOVF       FARG_Char_scroll_left_begin_max+1, 0
0x01BC	0x00CE      	MOVWF      FARG_Write_Byte_maxcolumn+1
0x01BD	0x2010      	CALL       _Write_Byte
;MatrizdeLed.c,486 :: 		for(i=0;i<n;i++){
0x01BE	0x0AC4      	INCF       Char_scroll_left_i_L0, 1
;MatrizdeLed.c,488 :: 		}
0x01BF	0x29A9      	GOTO       L_Char_scroll_left196
L_Char_scroll_left197:
;MatrizdeLed.c,489 :: 		Delay_ms(50);
0x01C0	0x3082      	MOVLW      130
0x01C1	0x00FC      	MOVWF      R12
0x01C2	0x30DD      	MOVLW      221
0x01C3	0x00FD      	MOVWF      R13
L_Char_scroll_left199:
0x01C4	0x0BFD      	DECFSZ     R13, 1
0x01C5	0x29C4      	GOTO       L_Char_scroll_left199
0x01C6	0x0BFC      	DECFSZ     R12, 1
0x01C7	0x29C4      	GOTO       L_Char_scroll_left199
0x01C8	0x0000      	NOP
0x01C9	0x0000      	NOP
;MatrizdeLed.c,490 :: 		Clear_Matrix();
0x01CA	0x2088      	CALL       _Clear_Matrix
;MatrizdeLed.c,492 :: 		Delay_ms(50);
0x01CB	0x3082      	MOVLW      130
0x01CC	0x00FC      	MOVWF      R12
0x01CD	0x30DD      	MOVLW      221
0x01CE	0x00FD      	MOVWF      R13
L_Char_scroll_left200:
0x01CF	0x0BFD      	DECFSZ     R13, 1
0x01D0	0x29CF      	GOTO       L_Char_scroll_left200
0x01D1	0x0BFC      	DECFSZ     R12, 1
0x01D2	0x29CF      	GOTO       L_Char_scroll_left200
0x01D3	0x0000      	NOP
0x01D4	0x0000      	NOP
;MatrizdeLed.c,485 :: 		for(j=0;j<0;j++){
0x01D5	0x0AC5      	INCF       Char_scroll_left_j_L0, 1
;MatrizdeLed.c,494 :: 		} break;
0x01D6	0x29A4      	GOTO       L_Char_scroll_left193
L_Char_scroll_left194:
0x01D7	0x29E4      	GOTO       L_Char_scroll_left191
;MatrizdeLed.c,495 :: 		case 0:
L_Char_scroll_left201:
;MatrizdeLed.c,496 :: 		n= (begin_column-end_column);
0x01D8	0x082E      	MOVF       FARG_Char_scroll_left_end_column, 0
0x01D9	0x022C      	SUBWF      FARG_Char_scroll_left_begin_column, 0
0x01DA	0x00C6      	MOVWF      Char_scroll_left_n_L0
;MatrizdeLed.c,497 :: 		break;
0x01DB	0x29E4      	GOTO       L_Char_scroll_left191
;MatrizdeLed.c,499 :: 		}
L_Char_scroll_left190:
0x01DC	0x0847      	MOVF       Char_scroll_left_c_L0, 0
0x01DD	0x3A01      	XORLW      1
0x01DE	0x1903      	BTFSC      STATUS, 2
0x01DF	0x29A0      	GOTO       L_Char_scroll_left192
0x01E0	0x0847      	MOVF       Char_scroll_left_c_L0, 0
0x01E1	0x3A00      	XORLW      0
0x01E2	0x1903      	BTFSC      STATUS, 2
0x01E3	0x29D8      	GOTO       L_Char_scroll_left201
L_Char_scroll_left191:
;MatrizdeLed.c,500 :: 		}
L_end_Char_scroll_left:
0x01E4	0x0008      	RETURN
; end of _Char_scroll_left
_SPI1_Init:
;__Lib_SPI_c345.c,23 :: 		
;__Lib_SPI_c345.c,24 :: 		
0x01E5	0x30FF      	MOVLW      _SPI1_Read
0x01E6	0x1283      	BCF        STATUS, 5
0x01E7	0x1303      	BCF        STATUS, 6
0x01E8	0x00A1      	MOVWF      _SPI_Rd_Ptr
0x01E9	0x30FF      	MOVLW      hi_addr(_SPI1_Read)
0x01EA	0x00A2      	MOVWF      _SPI_Rd_Ptr+1
0x01EB	0x30FF      	MOVLW      FARG_SPI1_Read_buffer
0x01EC	0x00A3      	MOVWF      _SPI_Rd_Ptr+2
0x01ED	0x30FF      	MOVLW      hi_addr(FARG_SPI1_Read_buffer)
;__Lib_SPI_c345.c,25 :: 		
0x01EE	0x3003      	MOVLW      _SPI1_Write
0x01EF	0x00A4      	MOVWF      _SPI_Wr_Ptr
0x01F0	0x3000      	MOVLW      hi_addr(_SPI1_Write)
0x01F1	0x00A5      	MOVWF      _SPI_Wr_Ptr+1
0x01F2	0x3020      	MOVLW      FARG_SPI1_Write_data_
0x01F3	0x00A6      	MOVWF      _SPI_Wr_Ptr+2
0x01F4	0x3000      	MOVLW      hi_addr(FARG_SPI1_Write_data_)
;__Lib_SPI_c345.c,29 :: 		
0x01F5	0x1683      	BSF        STATUS, 5
0x01F6	0x1287      	BCF        TRISC5_bit, BitPos(TRISC5_bit+0)
;__Lib_SPI_c345.c,30 :: 		
0x01F7	0x1187      	BCF        TRISC3_bit, BitPos(TRISC3_bit+0)
;__Lib_SPI_c345.c,31 :: 		
0x01F8	0x1607      	BSF        TRISC4_bit, BitPos(TRISC4_bit+0)
;__Lib_SPI_c345.c,33 :: 		
0x01F9	0x1283      	BCF        STATUS, 5
0x01FA	0x0194      	CLRF       SSPCON
;__Lib_SPI_c345.c,34 :: 		
0x01FB	0x3040      	MOVLW      64
0x01FC	0x1683      	BSF        STATUS, 5
0x01FD	0x0094      	MOVWF      SSPSTAT
;__Lib_SPI_c345.c,35 :: 		
0x01FE	0x1283      	BCF        STATUS, 5
0x01FF	0x1694      	BSF        SSPCON, 5
;__Lib_SPI_c345.c,36 :: 		
L_end_SPI1_Init:
0x0200	0x0008      	RETURN
; end of _SPI1_Init
_main:
;MatrizdeLed.c,514 :: 		void main()
;MatrizdeLed.c,516 :: 		TRISA.RA0 = 1;
0x0201	0x1683      	BSF        STATUS, 5
0x0202	0x1303      	BCF        STATUS, 6
0x0203	0x1405      	BSF        TRISA, 0
;MatrizdeLed.c,520 :: 		Chip_Select_Direction = 0;    // Set RC0 pin as output.
0x0204	0x1007      	BCF        TRISC0_bit, BitPos(TRISC0_bit+0)
;MatrizdeLed.c,521 :: 		SPI1_init();                  // Initialize SPI1 module.
0x0205	0x21E5      	CALL       _SPI1_Init
;MatrizdeLed.c,523 :: 		max7219_init(0,0);              // initialize  max7219.
0x0206	0x01A9      	CLRF       FARG_max7219_init_maxrow
0x0207	0x01AA      	CLRF       FARG_max7219_init_maxrow+1
0x0208	0x01AB      	CLRF       FARG_max7219_init_maxcolumn
0x0209	0x01AC      	CLRF       FARG_max7219_init_maxcolumn+1
0x020A	0x20B8      	CALL       _max7219_init
;MatrizdeLed.c,524 :: 		max7219_init(0,1);
0x020B	0x01A9      	CLRF       FARG_max7219_init_maxrow
0x020C	0x01AA      	CLRF       FARG_max7219_init_maxrow+1
0x020D	0x3001      	MOVLW      1
0x020E	0x00AB      	MOVWF      FARG_max7219_init_maxcolumn
0x020F	0x3000      	MOVLW      0
0x0210	0x00AC      	MOVWF      FARG_max7219_init_maxcolumn+1
0x0211	0x20B8      	CALL       _max7219_init
;MatrizdeLed.c,526 :: 		Clear_Matrix();
0x0212	0x2088      	CALL       _Clear_Matrix
;MatrizdeLed.c,528 :: 		while(1)                            // infinite loop.
L_main204:
;MatrizdeLed.c,531 :: 		Char_scroll_left('A',0,8,0,0,0);
0x0213	0x3041      	MOVLW      65
0x0214	0x00A9      	MOVWF      FARG_Char_scroll_left_myChar
0x0215	0x01AA      	CLRF       FARG_Char_scroll_left_row
0x0216	0x01AB      	CLRF       FARG_Char_scroll_left_row+1
0x0217	0x3008      	MOVLW      8
0x0218	0x00AC      	MOVWF      FARG_Char_scroll_left_begin_column
0x0219	0x3000      	MOVLW      0
0x021A	0x00AD      	MOVWF      FARG_Char_scroll_left_begin_column+1
0x021B	0x01AE      	CLRF       FARG_Char_scroll_left_end_column
0x021C	0x01AF      	CLRF       FARG_Char_scroll_left_end_column+1
0x021D	0x01B0      	CLRF       FARG_Char_scroll_left_begin_max
0x021E	0x01B1      	CLRF       FARG_Char_scroll_left_begin_max+1
0x021F	0x01B2      	CLRF       FARG_Char_scroll_left_end_max
0x0220	0x01B3      	CLRF       FARG_Char_scroll_left_end_max+1
0x0221	0x217C      	CALL       _Char_scroll_left
;MatrizdeLed.c,561 :: 		}
0x0222	0x2A13      	GOTO       L_main204
;MatrizdeLed.c,562 :: 		}
L_end_main:
0x0223	0x2A23      	GOTO       $+0
; end of _main
;MatrizdeLed.c,1 :: _Alphabet
0x0224	0x347F ;_Alphabet+0
0x0225	0x3488 ;_Alphabet+1
0x0226	0x3488 ;_Alphabet+2
0x0227	0x3488 ;_Alphabet+3
0x0228	0x3488 ;_Alphabet+4
0x0229	0x347F ;_Alphabet+5
0x022A	0x34FF ;_Alphabet+6
0x022B	0x3491 ;_Alphabet+7
0x022C	0x3491 ;_Alphabet+8
0x022D	0x3491 ;_Alphabet+9
0x022E	0x3491 ;_Alphabet+10
0x022F	0x346E ;_Alphabet+11
0x0230	0x347E ;_Alphabet+12
0x0231	0x3481 ;_Alphabet+13
0x0232	0x3481 ;_Alphabet+14
0x0233	0x3481 ;_Alphabet+15
0x0234	0x3481 ;_Alphabet+16
0x0235	0x3442 ;_Alphabet+17
0x0236	0x34FF ;_Alphabet+18
0x0237	0x3481 ;_Alphabet+19
0x0238	0x3481 ;_Alphabet+20
0x0239	0x3481 ;_Alphabet+21
0x023A	0x3481 ;_Alphabet+22
0x023B	0x347E ;_Alphabet+23
0x023C	0x3481 ;_Alphabet+24
0x023D	0x34FF ;_Alphabet+25
0x023E	0x3491 ;_Alphabet+26
0x023F	0x3491 ;_Alphabet+27
0x0240	0x3491 ;_Alphabet+28
0x0241	0x3491 ;_Alphabet+29
0x0242	0x3481 ;_Alphabet+30
0x0243	0x34FF ;_Alphabet+31
0x0244	0x3491 ;_Alphabet+32
0x0245	0x3490 ;_Alphabet+33
0x0246	0x3490 ;_Alphabet+34
0x0247	0x3480 ;_Alphabet+35
0x0248	0x347E ;_Alphabet+36
0x0249	0x3481 ;_Alphabet+37
0x024A	0x3481 ;_Alphabet+38
0x024B	0x3489 ;_Alphabet+39
0x024C	0x3489 ;_Alphabet+40
0x024D	0x344E ;_Alphabet+41
0x024E	0x34FF ;_Alphabet+42
0x024F	0x3410 ;_Alphabet+43
0x0250	0x3410 ;_Alphabet+44
0x0251	0x3410 ;_Alphabet+45
0x0252	0x3410 ;_Alphabet+46
0x0253	0x34FF ;_Alphabet+47
0x0254	0x3400 ;_Alphabet+48
0x0255	0x3481 ;_Alphabet+49
0x0256	0x34FF ;_Alphabet+50
0x0257	0x34FF ;_Alphabet+51
0x0258	0x3481 ;_Alphabet+52
0x0259	0x3400 ;_Alphabet+53
0x025A	0x3406 ;_Alphabet+54
0x025B	0x3401 ;_Alphabet+55
0x025C	0x3481 ;_Alphabet+56
0x025D	0x34FE ;_Alphabet+57
0x025E	0x3480 ;_Alphabet+58
0x025F	0x3400 ;_Alphabet+59
0x0260	0x3481 ;_Alphabet+60
0x0261	0x34FF ;_Alphabet+61
0x0262	0x3499 ;_Alphabet+62
0x0263	0x3424 ;_Alphabet+63
0x0264	0x34C3 ;_Alphabet+64
0x0265	0x3481 ;_Alphabet+65
0x0266	0x3481 ;_Alphabet+66
0x0267	0x34FF ;_Alphabet+67
0x0268	0x3481 ;_Alphabet+68
0x0269	0x3401 ;_Alphabet+69
0x026A	0x3401 ;_Alphabet+70
0x026B	0x3403 ;_Alphabet+71
0x026C	0x34FF ;_Alphabet+72
0x026D	0x3460 ;_Alphabet+73
0x026E	0x3418 ;_Alphabet+74
0x026F	0x3418 ;_Alphabet+75
0x0270	0x3460 ;_Alphabet+76
0x0271	0x34FF ;_Alphabet+77
0x0272	0x34FF ;_Alphabet+78
0x0273	0x3460 ;_Alphabet+79
0x0274	0x3410 ;_Alphabet+80
0x0275	0x3408 ;_Alphabet+81
0x0276	0x3406 ;_Alphabet+82
0x0277	0x34FF ;_Alphabet+83
0x0278	0x347E ;_Alphabet+84
0x0279	0x3481 ;_Alphabet+85
0x027A	0x3481 ;_Alphabet+86
0x027B	0x3481 ;_Alphabet+87
0x027C	0x3481 ;_Alphabet+88
0x027D	0x347E ;_Alphabet+89
0x027E	0x3481 ;_Alphabet+90
0x027F	0x34FF ;_Alphabet+91
0x0280	0x3489 ;_Alphabet+92
0x0281	0x3488 ;_Alphabet+93
0x0282	0x3488 ;_Alphabet+94
0x0283	0x3470 ;_Alphabet+95
0x0284	0x347E ;_Alphabet+96
0x0285	0x3481 ;_Alphabet+97
0x0286	0x3485 ;_Alphabet+98
0x0287	0x3489 ;_Alphabet+99
0x0288	0x3487 ;_Alphabet+100
0x0289	0x347E ;_Alphabet+101
0x028A	0x34FF ;_Alphabet+102
0x028B	0x3498 ;_Alphabet+103
0x028C	0x3498 ;_Alphabet+104
0x028D	0x3494 ;_Alphabet+105
0x028E	0x3493 ;_Alphabet+106
0x028F	0x3461 ;_Alphabet+107
0x0290	0x3462 ;_Alphabet+108
0x0291	0x3491 ;_Alphabet+109
0x0292	0x3491 ;_Alphabet+110
0x0293	0x3491 ;_Alphabet+111
0x0294	0x3491 ;_Alphabet+112
0x0295	0x344E ;_Alphabet+113
0x0296	0x34C0 ;_Alphabet+114
0x0297	0x3481 ;_Alphabet+115
0x0298	0x34FF ;_Alphabet+116
0x0299	0x34FF ;_Alphabet+117
0x029A	0x3481 ;_Alphabet+118
0x029B	0x34C0 ;_Alphabet+119
0x029C	0x34FE ;_Alphabet+120
0x029D	0x3401 ;_Alphabet+121
0x029E	0x3401 ;_Alphabet+122
0x029F	0x3401 ;_Alphabet+123
0x02A0	0x3401 ;_Alphabet+124
0x02A1	0x34FE ;_Alphabet+125
0x02A2	0x34FC ;_Alphabet+126
0x02A3	0x3402 ;_Alphabet+127
0x02A4	0x3401 ;_Alphabet+128
0x02A5	0x3401 ;_Alphabet+129
0x02A6	0x3402 ;_Alphabet+130
0x02A7	0x34FC ;_Alphabet+131
0x02A8	0x34FF ;_Alphabet+132
0x02A9	0x3402 ;_Alphabet+133
0x02AA	0x3404 ;_Alphabet+134
0x02AB	0x3404 ;_Alphabet+135
0x02AC	0x3402 ;_Alphabet+136
0x02AD	0x34FF ;_Alphabet+137
0x02AE	0x34C3 ;_Alphabet+138
0x02AF	0x3424 ;_Alphabet+139
0x02B0	0x3418 ;_Alphabet+140
0x02B1	0x3418 ;_Alphabet+141
0x02B2	0x3424 ;_Alphabet+142
0x02B3	0x34C3 ;_Alphabet+143
0x02B4	0x34C0 ;_Alphabet+144
0x02B5	0x3420 ;_Alphabet+145
0x02B6	0x341F ;_Alphabet+146
0x02B7	0x341F ;_Alphabet+147
0x02B8	0x3420 ;_Alphabet+148
0x02B9	0x34C0 ;_Alphabet+149
0x02BA	0x34C3 ;_Alphabet+150
0x02BB	0x3485 ;_Alphabet+151
0x02BC	0x3489 ;_Alphabet+152
0x02BD	0x3491 ;_Alphabet+153
0x02BE	0x34A1 ;_Alphabet+154
0x02BF	0x34C3 ;_Alphabet+155
; end of _Alphabet
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [13]    _SPI1_Write
0x0010     [120]    _Write_Byte
0x0088      [29]    _Clear_Matrix
0x00A5       [7]    _____DoICP
0x00AC      [12]    ___CC2DW
0x00B8     [196]    _max7219_init
0x017C     [105]    _Char_scroll_left
0x01E5      [28]    _SPI1_Init
0x0201      [35]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0007       [0]    RC0_bit
0x0007       [0]    Chip_Select
0x000A       [1]    PCLATH
0x0013       [1]    SSPBUF
0x0014       [1]    SSPCON
0x0020       [1]    FARG_SPI1_Write_data_
0x0021       [3]    _SPI_Rd_Ptr
0x0024       [3]    _SPI_Wr_Ptr
0x0027       [2]    ___DoICPAddr
0x0029       [2]    FARG_max7219_init_maxrow
0x0029       [1]    FARG_Char_scroll_left_myChar
0x002A       [2]    FARG_Char_scroll_left_row
0x002B       [2]    FARG_max7219_init_maxcolumn
0x002C       [2]    FARG_Char_scroll_left_begin_column
0x002D       [2]    max7219_init_lc_L0
0x002E       [2]    FARG_Char_scroll_left_end_column
0x0030       [2]    FARG_Char_scroll_left_begin_max
0x0032       [2]    FARG_Char_scroll_left_end_max
0x0034       [8]    Char_scroll_left_Display_Byte_L0
0x003C       [8]    Char_scroll_left_Display_Byte_rec_0_L0
0x0044       [1]    Char_scroll_left_i_L0
0x0045       [1]    Char_scroll_left_j_L0
0x0046       [1]    Char_scroll_left_n_L0
0x0047       [1]    Char_scroll_left_c_L0
0x0048       [1]    Clear_Matrix_x_L0
0x0049       [1]    FARG_Write_Byte_myColumn
0x004A       [1]    FARG_Write_Byte_myValue
0x004B       [2]    FARG_Write_Byte_maxrow
0x004D       [2]    FARG_Write_Byte_maxcolumn
0x004F       [2]    Write_Byte_lc_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC0_bit
0x0087       [0]    TRISC3_bit
0x0087       [0]    Chip_Select_Direction
0x0087       [0]    TRISC5_bit
0x0094       [1]    SSPSTAT
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0224     [156]    _Alphabet
